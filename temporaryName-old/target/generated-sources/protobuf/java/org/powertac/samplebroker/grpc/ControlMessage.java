// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc.proto

package org.powertac.samplebroker.grpc;

/**
 * <pre>
 *Let the agent control the stepping of the server
 * </pre>
 *
 * Protobuf enum {@code ControlMessage}
 */
public enum ControlMessage
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ABORT = 0;</code>
   */
  ABORT(0),
  /**
   * <code>PAUSE = 1;</code>
   */
  PAUSE(1),
  /**
   * <code>RELEASE = 2;</code>
   */
  RELEASE(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ABORT = 0;</code>
   */
  public static final int ABORT_VALUE = 0;
  /**
   * <code>PAUSE = 1;</code>
   */
  public static final int PAUSE_VALUE = 1;
  /**
   * <code>RELEASE = 2;</code>
   */
  public static final int RELEASE_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ControlMessage valueOf(int value) {
    return forNumber(value);
  }

  public static ControlMessage forNumber(int value) {
    switch (value) {
      case 0: return ABORT;
      case 1: return PAUSE;
      case 2: return RELEASE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ControlMessage>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ControlMessage> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ControlMessage>() {
          public ControlMessage findValueByNumber(int number) {
            return ControlMessage.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.powertac.samplebroker.grpc.Grpc.getDescriptor().getEnumTypes().get(0);
  }

  private static final ControlMessage[] VALUES = values();

  public static ControlMessage valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ControlMessage(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:ControlMessage)
}

